export const machineSettings = { feed:1200, plunge:2, safeZ:5, units:'mm', mode:'router', stepsPerMm:1 }; function g0(x,y,z){ return `G0 X${x.toFixed(3)} Y${y.toFixed(3)} Z${z.toFixed(3)}`; } function g1(x,y,z,f){ return `G1 X${x.toFixed(3)} Y${y.toFixed(3)} Z${z.toFixed(3)} F${f}`; } export function generateRasterGcode(width_mm, height_mm, step_mm, depth_mm, origin={x:0,y:0}){ const lines=[]; lines.push('; Raster G-code generated by CncAi'); lines.push('G21'); lines.push('G90'); lines.push(g0(origin.x, origin.y, machineSettings.safeZ)); let y=origin.y; const ny=Math.ceil(height_mm/step_mm); for(let j=0;j<ny;j++){ const dir=(j%2===0)?1:-1; const xStart=origin.x, xEnd=origin.x+width_mm; lines.push(g0(xStart,y,machineSettings.safeZ)); lines.push(g1(xStart,y,-depth_mm,machineSettings.feed)); lines.push(g1(xEnd,y,-depth_mm,machineSettings.feed)); y += step_mm; } lines.push(g0(origin.x, origin.y, machineSettings.safeZ)); return lines.join('\n'); } export function generateContourGcode(contours, depth_mm, origin={x:0,y:0}){ const lines=[]; lines.push('; Contour G-code generated by CncAi'); lines.push('G21'); lines.push('G90'); lines.push(g0(origin.x, origin.y, machineSettings.safeZ)); for(const contour of contours){ if(!contour.length) continue; const start=contour[0]; lines.push(g0(start.x+origin.x, start.y+origin.y, machineSettings.safeZ)); lines.push(g1(start.x+origin.x, start.y+origin.y, -depth_mm, machineSettings.feed)); for(let i=1;i<contour.length;i++){ const p=contour[i]; lines.push(g1(p.x+origin.x, p.y+origin.y, -depth_mm, machineSettings.feed)); } lines.push(g1(start.x+origin.x, start.y+origin.y, -depth_mm, machineSettings.feed)); lines.push(g0(start.x+origin.x, start.y+origin.y, machineSettings.safeZ)); } return lines.join('\n'); } export function downloadGcode(text, filename='output.gcode'){ const blob=new Blob([text],{type:'text/plain'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=filename; document.body.appendChild(a); a.click(); setTimeout(()=>{ URL.revokeObjectURL(url); a.remove(); }, 5000); }